//? Redux
// https://redux.js.org/tutorials/fundamentals/part-2-concepts-data-flow
//? Однонаправленный поток данных
/*
**
***
****
*****/
//? Состоит из state, reducer,actions
//? state - состояние
//? reducer - функция преобразования состояния, всегда возвращает новое состояние, иначе не будет реагирования на изменения
//? actions - уникальное событие, которое закидываем в стор, вызывается соответствующий reducer, который обновляет стэйт
//? selectors - функции, которые достают из стэйта нужные данные, могут зависеть от других селекторов, при изменении стэйта, от которого зависят - вызовутся заново и вернут обновленные данные, если данные от которых зависят косвенно, например обьект из которого мы вытаскивали свойство изменился, но наше свойство не изменилось - селектор вызовется, но обновление подписки не произойдет, тк мы подписаны конкретно на изменение именно этого свойства